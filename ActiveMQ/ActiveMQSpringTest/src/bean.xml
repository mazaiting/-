<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
     http://www.springframework.org/schema/context  
     http://www.springframework.org/schema/context/spring-context-3.0.xsd  
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
    http://www.springframework.org/schema/jms 
    http://www.springframework.org/schema/jms/spring-jms-3.0.xsd">
	
	<!-- 自动扫描和管理Bean配置 -->
	<context:component-scan base-package="com.mazaiting"/>	
	
	<!-- 真正可以产生Connection的ConnectionFactory，由对应的JMS服务厂商提供 -->
	<bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://localhost:61616"/>
	</bean>
	
	<!--  ActiveMQ为我们提供了一个PooledConnectionFactory，通过往里面注入一个ActiveMQConnectionFactory可以用来将Connection、Session和MessageProducer池化，这样可以大大的减少我们的资源消耗。 -->
	<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
		<property name="connectionFactory" ref="targetConnectionFactory"/>
		<!-- 最大连接数 -->
		<property name="maxConnections" value="10"/>
	</bean>
	
	<!-- Spring 用于管理真正的ConnectionFactory的ConnectionFactory -->
	<bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
		<!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
		<property name="targetConnectionFactory" ref="pooledConnectionFactory"/>
	</bean>
	
	<!-- Spring 提供的JMS工具类，它可以进行消息的发送、接收等 -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<!-- 这个ConnectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
		<property name="connectionFactory" ref="connectionFactory"/>
	</bean>
	
	
	
	<!-- 队列目的地，点对点 -->
	<bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="queue"/>
	</bean>
	<!-- 消息监听器 -->
	<bean id="consumerMessageListener" class="com.mazaiting.jms.listener.ConsumerMessageListener"/>
	<!-- 消息监听容器 -->
	<bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory"/>
		<property name="destination" ref="queueDestination"/>
		<property name="messageListener" ref="consumerMessageListener"/>
	</bean>
	
	
	<!-- SessionAwareQueue目的地 -->
	<bean id="sessionAwareQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="sessionAwareQueue"/>
	</bean>
	<!-- 可以获取session的MessageListener -->
	<bean id="consumerSessionAwareMessageListener" class="com.mazaiting.jms.listener.ConsumerSessionAwareMessageListener">
		<property name="destination" ref="queueDestination"/>
	</bean>
	<!-- 消息监听容器 -->
	<bean id="sessionAwareListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory"/>
		<property name="destination" ref="sessionAwareQueue"/>
		<property name="messageListener" ref="consumerSessionAwareMessageListener"/>
	</bean>
	
	<!-- 测试消息监听适配器的队列目的地-MessageListenerAdapter -->
	<bean id="adapterQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>adapterQueue</value>
		</constructor-arg>
	</bean>
	<!-- 适配器 -->
	<bean id="messageListenerAdapter" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
		<property name="delegate">
			<bean class="com.mazaiting.jms.listener.ConsumerListener"/>
		</property>
		<property name="defaultListenerMethod" value="receiveMessage"/> 
		<!-- 添加配置 -->
		<property name="defaultResponseDestination" ref="defaultResponseQueue"/>
	</bean>
	<!-- 或者使用此方式配置适配器 -->
<!-- 	<bean id="messageListenerAdapter" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
		<constructor-arg>
			<bean class="com.mazaiting.jms.listener.ConsumerListener"/>
		</constructor-arg>
	</bean> -->
	<!-- 消息监听适配器对应的监听容器 -->
	<bean id="messageListenerAdapterContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory"/>
		<property name="destination" ref="adapterQueue"/>
		<property name="messageListener" ref="messageListenerAdapter"/>
	</bean>
	
	<!-- 主题目的地，一对多 -->
	<bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg value="topic"/>
	</bean>
	
	<!-- 用于测试消息回复 -->
	<bean id="responseQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>responseQueue</value>
		</constructor-arg>
	</bean>
	<!-- responseQueue对应的监听器 -->
	<bean id="responseQueueListener" class="com.mazaiting.jms.listener.ResponseQueueListener"/>
	<!-- responseQueue对应的监听容器 -->
	<bean id="responseQueueMessageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory"/>
		<property name="destination" ref="responseQueue"/>
		<property name="messageListener" ref="responseQueueListener"/>
	</bean>
	
	<!-- 默认的消息回复队列 -->
	<bean id="defaultResponseQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg>
			<value>defaultResponseQueue</value>
		</constructor-arg>
	</bean>
	<!-- defaultResponseQueue对应的监听器 -->
	<bean id="defaultResponseQueueListener" class="com.mazaiting.jms.listener.DefaultResponseQueueListener"/>
	<!-- defaultResponseQueue对应的监听容器 -->
	<bean id="defaultResponseQueueMessageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectionFactory"/>
		<property name="destination" ref="defaultResponseQueue"/>
		<property name="messageListener" ref="defaultResponseQueueListener"/>
	</bean>
</beans>